/* 
 This source code (the "Generated Software") is generated by the OutSystems Platform 
 and is licensed by OutSystems (http://www.outsystems.com) to You solely for testing and evaluation 
 purposes, unless You and OutSystems have executed a specific agreement covering the use terms and 
 conditions of the Generated Software, in which case such agreement shall apply. 
*/

using System;
using System.Collections.Generic;
using OutSystems.HubEdition.Extensibility.Data.DMLService;
using OutSystems.HubEdition.Extensibility.Data.DMLService.DMLPlaceholders;

namespace SnowflakeDatabaseProvider.DML {

    /// <summary>
    /// Defines a contract for generating DML fragments required by applications to perform specific queries (e.g. count query)
    /// </summary>
    public class SnowflakeDMLQueries : BaseDMLQueries
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="DMLQueries"/> class.
        /// </summary>
        /// <param name="dmlService">The DML service.</param>
        internal SnowflakeDMLQueries(IDMLService dmlService) : base(dmlService) { }

        public override IDictionary<StatementPlaceholder, string> SQLPlaceholderValuesForCountQuery()
        {
            IDictionary<StatementPlaceholder, string> placeholders = new Dictionary<StatementPlaceholder, string>();
            placeholders.Add(StatementPlaceholder.BeforeStatement, "SELECT COUNT(1) FROM (");
            placeholders.Add(StatementPlaceholder.AfterStatement, ") result");
            return placeholders;
        }

        /// <summary>
        /// Returns the DML expressions to be inserted in a query statement,
        /// to make it count the number of records returned by the original query.
        /// </summary>
        /// <param name="maxRecordsParam"></param>
        /// <returns>
        /// An <see cref="T:System.Collections.Generic.IDictionary`2" /> with the DML expressions.
        /// </returns>
        public override IDictionary<SelectPlaceholder, string> SQLPlaceholderValuesForMaxRecords(string maxRecordsParam) {
            Dictionary<SelectPlaceholder, string> maxRecordsStatement = new Dictionary<SelectPlaceholder, string>();
            maxRecordsStatement.Add(SelectPlaceholder.AfterStatement, " LIMIT " + maxRecordsParam);
            return maxRecordsStatement;
        }
    }
}
